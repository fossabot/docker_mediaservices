events {
  worker_connections 1024;
}

http {

  # In case of big files
  client_max_body_size 200M;

  log_format main '$remote_addr - $remote_user [$time_local] '
                  '$ssl_protocol/$ssl_cipher '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

  keepalive_timeout  60;

  server {
    listen 8000 default_server ssl;
    ssl on;
    ssl_certificate /etc/ssl/certs/mediaservices.crt;
    ssl_certificate_key /etc/ssl/private/mediaservices.key;
    server_name transmission;

    # Enable TLSv1.2, disable SSLv3.0, TLSv1.0 and TLSv1.1
    ssl_protocols TLSv1.2;

    # Enable modern TLS cipher suites
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

    # The order of cipher suites matters
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/transmission.access.log main;
    error_log  /var/log/nginx/transmission.error.log;

    location / {
      proxy_pass http://127.0.0.1:9091;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # HTTP 1.1 support
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
  }
}
